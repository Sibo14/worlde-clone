{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sibzm\\\\OneDrive\\\\Documents\\\\github\\\\worlde-clone\\\\src\\\\components\\\\Rows.jsx\",\n    _s = $RefreshSig$();\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\"; // >> Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  rowContainer: {\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  row: {\n    display: \"flex\",\n    width: \"80px\",\n    height: \"80px\",\n    border: \"1px solid #bbb\",\n    margin: \"4px\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    lineHeight: \"60px\",\n    textTransform: \"uppercase\",\n    fontWeight: \"bold\",\n    fontSize: \"2.5rem\",\n    \"&:nth-child(2)\": {\n      //never used before basically puts a delay on each squares animation, keyframes were assigned in index.css\n      animationDelay: \"0.4s\"\n    },\n    \"&:nth-child(3)\": {\n      animationDelay: \"0.6s\"\n    },\n    \"&:nth-child(4)\": {\n      animationDelay: \"0.8s\"\n    },\n    \"&:nth-child(5)\": {\n      animationDelay: \"1.0s\"\n    }\n  },\n  green: {\n    background: \"#5ac85a\",\n    borderColor: \"#5ac85a\",\n    animation: \"flip 0.8s forwards\"\n  },\n  grey: {\n    background: \"#a1a1a1\",\n    borderColor: \"#a1a1a1\",\n    animation: \"flip 0.8s forwards\"\n  },\n  orange: {\n    background: \"#FF7F50\",\n    borderColor: \"#FF7F50\",\n    animation: \"flip 0.8s forwards\"\n  }\n}));\n\nconst Rows = _ref => {\n  _s();\n\n  let {\n    guess,\n    currentGuess\n  } = _ref;\n  // >> Styles\n  const classes = useStyles(); // >> Components\n  // >> Functions\n\n  if (guess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rowContainer,\n      children: guess.map((item, index) => {\n        let colorRow = item.color;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx(classes.row, colorRow === \"grey\" ? classes.grey : colorRow === \"green\" ? classes.green : colorRow === \"orange\" ? classes.orange : classes.grey),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            align: \"center\",\n            variant: \"h3\",\n            children: item.key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (currentGuess) {\n    let letters = currentGuess.split(\"\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.rowContainer,\n      children: [letters === null || letters === void 0 ? void 0 : letters.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: clsx(classes.row, classes.filled),\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)), [...Array(5 - (letters === null || letters === void 0 ? void 0 : letters.length))].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.row\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  } // >> Render\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.rowContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Rows, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Rows;\nexport default Rows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rows\");","map":{"version":3,"names":["makeStyles","React","clsx","Typography","useEffect","useState","useStyles","rowContainer","textAlign","display","justifyContent","row","width","height","border","margin","alignItems","lineHeight","textTransform","fontWeight","fontSize","animationDelay","green","background","borderColor","animation","grey","orange","Rows","guess","currentGuess","classes","map","item","index","colorRow","color","key","letters","split","filled","Array","length"],"sources":["C:/Users/sibzm/OneDrive/Documents/github/worlde-clone/src/components/Rows.jsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n// >> Styles\r\nconst useStyles = makeStyles(() => ({\r\n  rowContainer: {\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  row: {\r\n    display: \"flex\",\r\n    width: \"80px\",\r\n    height: \"80px\",\r\n    border: \"1px solid #bbb\",\r\n    margin: \"4px\",\r\n    textAlign: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    lineHeight: \"60px\",\r\n    textTransform: \"uppercase\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"2.5rem\",\r\n    \"&:nth-child(2)\": {\r\n      //never used before basically puts a delay on each squares animation, keyframes were assigned in index.css\r\n      animationDelay: \"0.4s\",\r\n    },\r\n    \"&:nth-child(3)\": {\r\n      animationDelay: \"0.6s\",\r\n    },\r\n    \"&:nth-child(4)\": {\r\n      animationDelay: \"0.8s\",\r\n    },\r\n    \"&:nth-child(5)\": {\r\n      animationDelay: \"1.0s\",\r\n    },\r\n  },\r\n\r\n  green: {\r\n    background: \"#5ac85a\",\r\n    borderColor: \"#5ac85a\",\r\n    animation: \"flip 0.8s forwards\",\r\n  },\r\n  grey: {\r\n    background: \"#a1a1a1\",\r\n    borderColor: \"#a1a1a1\",\r\n    animation: \"flip 0.8s forwards\",\r\n  },\r\n  orange: {\r\n    background: \"#FF7F50\",\r\n    borderColor: \"#FF7F50\",\r\n    animation: \"flip 0.8s forwards\",\r\n  },\r\n}));\r\n\r\nconst Rows = ({ guess, currentGuess }) => {\r\n  // >> Styles\r\n  const classes = useStyles();\r\n\r\n  // >> Components\r\n\r\n  // >> Functions\r\n  if (guess) {\r\n    return (\r\n      <div className={classes.rowContainer}>\r\n        {guess.map((item, index) => {\r\n          let colorRow = item.color;\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={clsx(\r\n                classes.row,\r\n                colorRow === \"grey\"\r\n                  ? classes.grey\r\n                  : colorRow === \"green\"\r\n                  ? classes.green\r\n                  : colorRow === \"orange\"\r\n                  ? classes.orange\r\n                  : classes.grey\r\n              )}\r\n            >\r\n              <Typography align=\"center\" variant=\"h3\">\r\n                {item.key}\r\n              </Typography>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (currentGuess) {\r\n    let letters = currentGuess.split(\"\");\r\n    return (\r\n      <div className={classes.rowContainer}>\r\n        {letters?.map((item, index) => (\r\n          <div key={index} className={clsx(classes.row, classes.filled)}>\r\n            {item}\r\n          </div>\r\n        ))}\r\n        {[...Array(5 - letters?.length)].map((item, index) => (\r\n          <div key={index} className={classes.row}></div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // >> Render\r\n  return (\r\n    <div className={classes.rowContainer}>\r\n      <div className={classes.row}></div>\r\n      <div className={classes.row}></div>\r\n      <div className={classes.row}></div>\r\n      <div className={classes.row}></div>\r\n      <div className={classes.row}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rows;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}