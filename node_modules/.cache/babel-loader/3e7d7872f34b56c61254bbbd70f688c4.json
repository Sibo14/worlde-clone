{"ast":null,"code":"import{makeStyles}from\"@material-ui/styles\";import React from\"react\";import Rows from\"./Rows\";// >> Styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{gridContainer:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",flexDirection:\"column\",width:\"100%\",height:\"100%\"}};});var Grid=function Grid(_ref){var turn=_ref.turn,currentGuess=_ref.currentGuess,guesses=_ref.guesses;// >> Styles\nvar classes=useStyles();// >> render\nreturn/*#__PURE__*/_jsx(\"div\",{className:classes.gridContainer,children:guesses.map(function(item,index){// if the turn === row number then print out what the user is typing into the current row\nif(turn===index){return/*#__PURE__*/_jsx(Rows,{currentGuess:currentGuess},index);}return/*#__PURE__*/_jsx(Rows,{guess:item},index);})});};export default Grid;","map":{"version":3,"names":["makeStyles","React","Rows","useStyles","gridContainer","display","justifyContent","alignItems","flexDirection","width","height","Grid","turn","currentGuess","guesses","classes","map","item","index"],"sources":["C:/Users/sibzm/OneDrive/Documents/github/worlde-clone/src/components/Grid.jsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\r\nimport React from \"react\";\r\nimport Rows from \"./Rows\";\r\n\r\n// >> Styles\r\nconst useStyles = makeStyles(() => ({\r\n  gridContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\n\r\nconst Grid = ({ turn, currentGuess, guesses }) => {\r\n  // >> Styles\r\n  const classes = useStyles();\r\n  // >> render\r\n  return (\r\n    <div className={classes.gridContainer}>\r\n      {guesses.map((item, index) => {\r\n        // if the turn === row number then print out what the user is typing into the current row\r\n        if (turn === index) {\r\n          return <Rows key={index} currentGuess={currentGuess} />;\r\n        }\r\n        return <Rows key={index} guess={item} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"],"mappings":"AAAA,OAASA,UAAT,KAA2B,qBAA3B,CACA,MAAOC,MAAP,KAAkB,OAAlB,CACA,MAAOC,KAAP,KAAiB,QAAjB,CAEA;2CACA,GAAMC,UAAS,CAAGH,UAAU,CAAC,iBAAO,CAClCI,aAAa,CAAE,CACbC,OAAO,CAAE,MADI,CAEbC,cAAc,CAAE,QAFH,CAGbC,UAAU,CAAE,QAHC,CAIbC,aAAa,CAAE,QAJF,CAKbC,KAAK,CAAE,MALM,CAMbC,MAAM,CAAE,MANK,CADmB,CAAP,EAAD,CAA5B,CAWA,GAAMC,KAAI,CAAG,QAAPA,KAAO,MAAqC,IAAlCC,KAAkC,MAAlCA,IAAkC,CAA5BC,YAA4B,MAA5BA,YAA4B,CAAdC,OAAc,MAAdA,OAAc,CAChD;AACA,GAAMC,QAAO,CAAGZ,SAAS,EAAzB,CACA;AACA,mBACE,YAAK,SAAS,CAAEY,OAAO,CAACX,aAAxB,UACGU,OAAO,CAACE,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC5B;AACA,GAAIN,IAAI,GAAKM,KAAb,CAAoB,CAClB,mBAAO,KAAC,IAAD,EAAkB,YAAY,CAAEL,YAAhC,EAAWK,KAAX,CAAP,CACD,CACD,mBAAO,KAAC,IAAD,EAAkB,KAAK,CAAED,IAAzB,EAAWC,KAAX,CAAP,CACD,CANA,CADH,EADF,CAWD,CAfD,CAiBA,cAAeP,KAAf"},"metadata":{},"sourceType":"module"}