{"ast":null,"code":"import _slicedToArray from\"C:/Users/sibzm/OneDrive/Documents/github/worlde-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{makeStyles}from\"@material-ui/styles\";import{Typography}from\"@mui/material\";import clsx from\"clsx\";import React,{useEffect,useState}from\"react\";import{alphabetArray}from\"../utilities/alphabet\";// >> Styles\nimport{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(){return{};});var Keypad=function Keypad(_ref){var usedKeys=_ref.usedKeys;// >> Styles\nvar classes=useStyles();// >> State\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),letters=_useState2[0],setLetters=_useState2[1];// >> UseEffect\nuseEffect(function(){setLetters(alphabetArray);},[]);// >> Render\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"keypad\",children:letters&&letters.map(function(item,index){var color=usedKeys[item];return/*#__PURE__*/_jsx(\"div\",{className:color,children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\" \",item]})},index);})});};export default Keypad;","map":{"version":3,"names":["makeStyles","Typography","clsx","React","useEffect","useState","alphabetArray","useStyles","Keypad","usedKeys","classes","letters","setLetters","map","item","index","color"],"sources":["C:/Users/sibzm/OneDrive/Documents/github/worlde-clone/src/components/Keypad.jsx"],"sourcesContent":["import { makeStyles } from \"@material-ui/styles\";\r\nimport { Typography } from \"@mui/material\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { alphabetArray } from \"../utilities/alphabet\";\r\n\r\n// >> Styles\r\nconst useStyles = makeStyles(() => ({}));\r\n\r\nconst Keypad = ({ usedKeys }) => {\r\n  // >> Styles\r\n  const classes = useStyles();\r\n  // >> State\r\n  const [letters, setLetters] = useState(null);\r\n\r\n  // >> UseEffect\r\n  useEffect(() => {\r\n    setLetters(alphabetArray);\r\n  }, []);\r\n  // >> Render\r\n  return (\r\n    <div className=\"keypad\">\r\n      {letters &&\r\n        letters.map((item, index) => {\r\n          const color = usedKeys[item];\r\n          return (\r\n            <div key={index} className={color}>\r\n              <Typography variant=\"h6\"> {item}</Typography>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n"],"mappings":"2IAAA,OAASA,UAAT,KAA2B,qBAA3B,CACA,OAASC,UAAT,KAA2B,eAA3B,CACA,MAAOC,KAAP,KAAiB,MAAjB,CACA,MAAOC,MAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,aAAT,KAA8B,uBAA9B,CAEA;wFACA,GAAMC,UAAS,CAAGP,UAAU,CAAC,iBAAO,EAAP,EAAD,CAA5B,CAEA,GAAMQ,OAAM,CAAG,QAATA,OAAS,MAAkB,IAAfC,SAAe,MAAfA,QAAe,CAC/B;AACA,GAAMC,QAAO,CAAGH,SAAS,EAAzB,CACA;AACA,cAA8BF,QAAQ,CAAC,IAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eAEA;AACAR,SAAS,CAAC,UAAM,CACdQ,UAAU,CAACN,aAAD,CAAV,CACD,CAFQ,CAEN,EAFM,CAAT,CAGA;AACA,mBACE,YAAK,SAAS,CAAC,QAAf,UACGK,OAAO,EACNA,OAAO,CAACE,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC3B,GAAMC,MAAK,CAAGP,QAAQ,CAACK,IAAD,CAAtB,CACA,mBACE,YAAiB,SAAS,CAAEE,KAA5B,uBACE,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,eAA2BF,IAA3B,GADF,EAAUC,KAAV,CADF,CAKD,CAPD,CAFJ,EADF,CAaD,CAxBD,CA0BA,cAAeP,OAAf"},"metadata":{},"sourceType":"module"}